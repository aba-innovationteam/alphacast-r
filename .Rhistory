df <- httr::VERB(
verb = "GET", url = "https://charts.alphacast.io/api/datasets/5823.csv",
httr::authenticate(
user = "ak_QDPD89fxPcdlhWwnhoXB",
password = ""
)
)
return(df)
}
else {
return("Error: dataset_id must be numeric.")
}
}
get_dataframe(232)
get_dataframe <- function(dataset_id, api_key) {
if (is.numeric(dataset_id)){
df <- httr::VERB(
verb = "GET", url = "https://charts.alphacast.io/api/datasets/5823.csv",
httr::authenticate(
user = "ak_QDPD89fxPcdlhWwnhoXB",
password = ""
)
)
as.data.frame(df)
}
else {
return("Error: dataset_id must be numeric.")
}
}
get_dataframe(232)
cov <- httr::VERB(
verb = "GET", url = "https://charts.alphacast.io/api/datasets/5823.csv",
httr::authenticate(
user = "ak_QDPD89fxPcdlhWwnhoXB",
password = ""
)
)
cov <- GET("https://charts.alphacast.io/api/datasets/5823.csv?variableIds=2294682%2C2294691%2C2294680%2C2294707&transformationIds=original",
authenticate(user = "ak_QDPD89fxPcdlhWwnhoXB", password = ""))
source("~/Desktop/Trabajo/Alphacast/alphacast.R", echo=TRUE)
cov <- GET("https://charts.alphacast.io/api/datasets/5823.csv?variableIds=2294682%2C2294691%2C2294680%2C2294707&transformationIds=original",
authenticate(user = "ak_QDPD89fxPcdlhWwnhoXB", password = ""))
cov <- httr::VERB(
verb = "GET", url = "https://charts.alphacast.io/api/datasets/5823.csv",
httr::authenticate(
user = "ak_QDPD89fxPcdlhWwnhoXB",
password = ""
)
)
cov <- GET("https://charts.alphacast.io/api/datasets/5823.csv?variableIds=2294682%2C2294691%2C2294680%2C2294707&transformationIds=original",
authenticate(user = "ak_QDPD89fxPcdlhWwnhoXB", password = ""))
content(cov)
get_dataframe <- function(dataset_id, api_key) {
if (is.numeric(dataset_id)){
r <- httr::GET("https://charts.alphacast.io/api/datasets/5823.csv?variableIds=2294682%2C2294691%2C2294680%2C2294707&transformationIds=original",
authenticate(user = "ak_QDPD89fxPcdlhWwnhoXB", password = ""))
content(r)
}
else {
return("Error: dataset_id must be numeric.")
}
}
get_dataframe(232)
get_dataframe <- function(dataset_id, api_key) {
if (is.numeric(dataset_id)){
r <- httr::GET("https://charts.alphacast.io/api/datasets/5823.csv?variableIds=2294682%2C2294691%2C2294680%2C2294707&transformationIds=original",
authenticate(user = "ak_QDPD89fxPcdlhWwnhoXB", password = ""))
content(r)
}
else {
return("Error: dataset_id must be numeric.")
}
}
get_dataframe(232)
get_datasets <- function(api_key) {
r <- httr::GET("https://charts.alphacast.io/api/datasets",
authenticate(user = "ak_QDPD89fxPcdlhWwnhoXB", password = ""))
content(r)
}
get_datasets()
get_datasets <- function(api_key) {
r <- httr::GET("https://charts.alphacast.io/api/datasets",
authenticate(user = "ak_QDPD89fxPcdlhWwnhoXB", password = ""))
as.data.frame(content(r))
}
get_datasets()
get_datasets <- function(api_key) {
r <- httr::GET("https://charts.alphacast.io/api/datasets",
authenticate(user = "ak_QDPD89fxPcdlhWwnhoXB", password = ""))
content(r)
}
dsts <- get_datasets()
View(dsts)
bind_rows(dsts)
get_datasets <- function(api_key) {
r <- httr::GET("https://charts.alphacast.io/api/datasets",
authenticate(user = "ak_QDPD89fxPcdlhWwnhoXB", password = ""))
dplyr::bind_rows(content(r))
}
dsts <- get_datasets()
View(dsts)
unique(dplyr::bind_rows(content(r)[ ,-5]))
get_datasets <- function(api_key) {
r <- httr::GET("https://charts.alphacast.io/api/datasets",
authenticate(user = "ak_QDPD89fxPcdlhWwnhoXB", password = ""))
unique(dplyr::bind_rows(content(r)[ ,-5]))
}
dsts <- get_datasets()
View(dsts)
get_datasets <- function(api_key) {
r <- httr::GET("https://charts.alphacast.io/api/datasets",
authenticate(user = "ak_QDPD89fxPcdlhWwnhoXB", password = ""))
unique(dplyr::bind_rows(content(r))[ ,-5])
}
dsts <- get_datasets()
View(dsts)
#' Get dataframe
#'
#' Get a specified dataset in dataframe format directly from Alphacast API.
#' @param dataset_id Dataset ID. It must be numeric.
#' @return A dataframe with dates, entity and data.
#' @examples
#' temp1 <- F_to_C(50);
#' temp2 <- F_to_C( c(50, 63, 23) );
#' @export
api_key = "ak_QDPD89fxPcdlhWwnhoXB"
get_dataframe <- function(dataset_id, api_key) {
if (is.numeric(dataset_id)){
r <- httr::GET(paste("https://charts.alphacast.io/api/datasets/", dataset_id,".csv", sep=""),
authenticate(user = api_key, password = ""))
content(r)
}
else {
return("Error: dataset_id must be numeric.")
}
}
View(dsts)
get_dataframe(5236, api_key)
public_opinion <- get_dataframe(5236, api_key)
View(public_opinion)
library(ggplot2)
public_opinion <- melt(public_opinion)
public_opinion <- reshape2::melt(public_opinion)
public_opinion <- reshape::melt(public_opinion)
install.packages("reshape2")
install.packages("reshape")
public_opinion <- reshape2::melt(public_opinion)
View(public_opinion)
public_opinion <- get_dataframe(5236, api_key)
public_opinion <- reshape2::melt(public_opinion, vars.id = c("Entity"))
View(public_opinion)
public_opinion <- get_dataframe(5236, api_key)
public_opinion <- reshape2::melt(public_opinion, vars.id = c("Entity", "Year"))
public_opinion <- get_dataframe(5236, api_key)
public_opinion <- reshape2::melt(public_opinion, id.vars = c("Entity", "Year"))
View(public_opinion)
ggplot(public_opinion[which(public_opinion$Entity=="Alberto Fernández", )])+
geom_line(aes(Year, value, color=variable))
ggplot(public_opinion[which(public_opinion$Entity=="Alberto Fernández"), ])+
geom_line(aes(Year, value, color=variable))
ggplot(public_opinion[which(public_opinion$Entity=="Alberto Fernández"), ])+
geom_line(aes(Year, value, color=variable))+
theme(legend.position = "none")
lucky_words <- c("Argentina", "inflation")
get_datasets <- function(lucky_words, api_key) {
r <- httr::GET("https://charts.alphacast.io/api/datasets",
authenticate(user = api_key, password = ""))
r <- unique(dplyr::bind_rows(content(r))[ ,-5])
r <- r[which(lucky_words %in% r$name), ]
r <- r[round(runif(1, min=1, max=nrow(r))),1]
r <- httr::GET(paste("https://charts.alphacast.io/api/datasets/", r,".csv", sep=""),
authenticate(user = api_key, password = ""))
content(r)
}
get_datasets(lucky_words, api_key)
lucky_words <- c("inflation")
get_datasets(lucky_words, api_key)
get_lucky_dataset <- function(lucky_words, api_key) {
r <- httr::GET("https://charts.alphacast.io/api/datasets",
authenticate(user = api_key, password = ""))
r <- unique(dplyr::bind_rows(content(r))[ ,-5])
r <- r[which(lucky_words %in% r$name), ]
r <- r[round(runif(1, min=1, max=nrow(r))),1]
r <- httr::GET(paste("https://charts.alphacast.io/api/datasets/", r,".csv", sep=""),
authenticate(user = api_key, password = ""))
content(r)
}
get_lucky_dataset(lucky_words, api_key)
get_lucky_dataset <- function(lucky_words, api_key) {
r <- httr::GET("https://charts.alphacast.io/api/datasets",
authenticate(user = api_key, password = ""))
r <- unique(dplyr::bind_rows(content(r))[ ,-5])
r <- r[which(lucky_words %in% r$name), ]
r <- r[round(runif(1, min=1, max=nrow(r))),1]
r
# r <- httr::GET(paste("https://charts.alphacast.io/api/datasets/", r,".csv", sep=""),
#               authenticate(user = api_key, password = ""))
#content(r)
}
get_lucky_dataset(lucky_words, api_key)
get_lucky_dataset <- function(lucky_words, api_key) {
r <- httr::GET("https://charts.alphacast.io/api/datasets",
authenticate(user = api_key, password = ""))
r <- unique(dplyr::bind_rows(content(r))[ ,-5])
#r <- r[which(r$name %in% lucky_words), ]
r <- r[grep(paste(lucky_words, collapse="|"), r$name), ]
r <- r[round(runif(1, min=1, max=nrow(r))),1]
r
r <- httr::GET(paste("https://charts.alphacast.io/api/datasets/", r,".csv", sep=""),
authenticate(user = api_key, password = ""))
content(r)
}
get_lucky_dataset(lucky_words, api_key)
get_lucky_dataset <- function(lucky_words, api_key) {
r <- httr::GET("https://charts.alphacast.io/api/datasets",
authenticate(user = api_key, password = ""))
r <- unique(dplyr::bind_rows(content(r))[ ,-5])
#r <- r[which(r$name %in% lucky_words), ]
r <- r[grep(paste(lucky_words, collapse="|"), r$name), ]
#r <- r[round(runif(1, min=1, max=nrow(r))),1]
r
# r <- httr::GET(paste("https://charts.alphacast.io/api/datasets/", r,".csv", sep=""),
authenticate(user = api_key, password = ""))
#content(r)
}
get_lucky_dataset <- function(lucky_words, api_key) {
r <- httr::GET("https://charts.alphacast.io/api/datasets",
authenticate(user = api_key, password = ""))
r <- unique(dplyr::bind_rows(content(r))[ ,-5])
#r <- r[which(r$name %in% lucky_words), ]
r <- r[grep(paste(lucky_words, collapse="|"), r$name), ]
#r <- r[round(runif(1, min=1, max=nrow(r))),1]
r
# r <- httr::GET(paste("https://charts.alphacast.io/api/datasets/", r,".csv", sep=""),
#               authenticate(user = api_key, password = ""))
#content(r)
}
get_lucky_dataset(lucky_words, api_key)
dsts[grep(paste(lucky_words, collapse="|"), dsts$name), ]
dsts[grep(paste(lucky_words), dsts$name), ]
dsts[grepl(paste(lucky_words, collapse="|"), dsts$name), ]
dsts[grepl("inflation", dsts$name), ]
View(dsts)
dsts[grepl("fiscal", dsts$name), ]
dsts[grepl("Fiscal", dsts$name), ]
dsts[grepl("Fiscal", dsts$name, ignore.case=TRUE), ]
dsts[grepl("fiscal", dsts$name, ignore.case=TRUE), ]
lucky_words <- c("Prices")
get_lucky_dataset <- function(lucky_words, api_key) {
r <- httr::GET("https://charts.alphacast.io/api/datasets",
authenticate(user = api_key, password = ""))
r <- unique(dplyr::bind_rows(content(r))[ ,-5])
#r <- r[which(r$name %in% lucky_words), ]
r <- r[grepl(paste(lucky_words, collapse="|", ignore.case=TRUE), r$name), ]
r <- r[round(runif(1, min=1, max=nrow(r))),1]
r
# r <- httr::GET(paste("https://charts.alphacast.io/api/datasets/", r,".csv", sep=""),
#               authenticate(user = api_key, password = ""))
#content(r)
}
get_lucky_dataset(lucky_words, api_key)
View(dsts)
lucky_words <- c("mobility", "mexico")
get_lucky_dataset(lucky_words, api_key)
get_lucky_dataset <- function(lucky_words, api_key) {
r <- httr::GET("https://charts.alphacast.io/api/datasets",
authenticate(user = api_key, password = ""))
r <- unique(dplyr::bind_rows(content(r))[ ,-5])
#r <- r[which(r$name %in% lucky_words), ]
r <- r[grepl(paste(lucky_words, collapse="||", ignore.case=TRUE), r$name), ]
r <- r[round(runif(1, min=1, max=nrow(r))),1]
r
# r <- httr::GET(paste("https://charts.alphacast.io/api/datasets/", r,".csv", sep=""),
#               authenticate(user = api_key, password = ""))
#content(r)
}
get_lucky_dataset(lucky_words, api_key)
get_lucky_dataset <- function(lucky_words, api_key) {
r <- httr::GET("https://charts.alphacast.io/api/datasets",
authenticate(user = api_key, password = ""))
r <- unique(dplyr::bind_rows(content(r))[ ,-5])
#r <- r[which(r$name %in% lucky_words), ]
r <- r[grepl(paste(lucky_words, collapse="||", ignore.case=TRUE), r$name), ]
r <- r[round(runif(1, min=1, max=nrow(r))),1]
r <- httr::GET(paste("https://charts.alphacast.io/api/datasets/", r,".csv", sep=""),
authenticate(user = api_key, password = ""))
content(r)
}
get_lucky_dataset(lucky_words, api_key)
get_lucky_dataset <- function(lucky_words, api_key) {
r <- httr::GET("https://charts.alphacast.io/api/datasets",
authenticate(user = api_key, password = ""))
r <- unique(dplyr::bind_rows(content(r))[ ,-5])
r <- r[grepl(paste(lucky_words, collapse="&&", ignore.case=TRUE), r$name), ]
r <- r[round(runif(1, min=1, max=nrow(r))),1]
r <- httr::GET(paste("https://charts.alphacast.io/api/datasets/", r,".csv", sep=""),
authenticate(user = api_key, password = ""))
content(r)
}
get_lucky_dataset(lucky_words, api_key)
dsts <- dsts[grepl(paste(lucky_words, collapse="||", ignore.case=TRUE), dsts$name), ]
get_datasets <- function(api_key) {
r <- httr::GET("https://charts.alphacast.io/api/datasets",
authenticate(user = api_key, password = ""))
unique(dplyr::bind_rows(content(r))[ ,-5])
}
dsts <- get_datasets()
dsts <- get_datasets(api_key)
dsts[grepl(paste(lucky_words, collapse="||", ignore.case=TRUE), dsts$name), ]
dsts[grepl(paste(lucky_words, collapse="||", ignore.case=TRUE), dsts$name), ]
lucky_words <- c("mobility", "mexico")
dsts[grepl(paste(lucky_words, collapse="||", ignore.case=TRUE), dsts$name), ]
dsts[grepl(paste(lucky_words, collapse="&", ignore.case=TRUE), dsts$name), ]
dsts[grepl(paste(lucky_words, collapse="&&", ignore.case=TRUE), dsts$name), ]
dsts[grepl(paste(lucky_words, ignore.case=TRUE), dsts$name), ]
dsts[grepl(paste(lucky_words, collapse="||"), ignore.case=TRUE), dsts$name), ]
dsts[grepl(paste(lucky_words, collapse="||"), ignore.case=TRUE, dsts$name), ]
dsts[grepl(paste(lucky_words, collapse="|"), ignore.case=TRUE, dsts$name), ]
dsts[grepl(paste(lucky_words, collapse="&"), ignore.case=TRUE, dsts$name), ]
dsts[grepl(paste(lucky_words, collapse="|"), ignore.case=TRUE, dsts$name), ]
dsts[stringr::str_detect(dsts$name, lucky_words), ]
dsts[stringr::str_detect(dsts$name, lucky_words, negate = TRUE), ]
length(lucky_words)
get_lucky_dataset <- function(lucky_words, api_key) {
r <- httr::GET("https://charts.alphacast.io/api/datasets",
authenticate(user = api_key, password = ""))
r <- unique(dplyr::bind_rows(content(r))[ ,-5])
if (length(lucky_words)==2){ r <- r[grepl(paste("^(?=.*\\b", lucky_words[1], "\\b)(?=.*\\b", lucky_words[2], "\\b)", sep = ""), r$name), ]
} else {
r <- r[grepl(lucky_words[1], r$name), ]
}
r <- r[round(runif(1, min=1, max=nrow(r))),1]
r <- httr::GET(paste("https://charts.alphacast.io/api/datasets/", r,".csv", sep=""),
authenticate(user = api_key, password = ""))
content(r)
}
get_lucky_dataset(lucky_words, api_key)
get_lucky_dataset <- function(lucky_words, api_key) {
r <- httr::GET("https://charts.alphacast.io/api/datasets",
authenticate(user = api_key, password = ""))
r <- unique(dplyr::bind_rows(content(r))[ ,-5])
if (length(lucky_words)==2){ r <- r[grepl(paste(".*(",lucky_words[1],".*",lucky_words[2],"|",lucky_words[2],".*",lucky_words[1], ").*", sep = ""), r$name), ]
} else {
r <- r[grepl(lucky_words[1], r$name), ]
}
r <- r[round(runif(1, min=1, max=nrow(r))),1]
r <- httr::GET(paste("https://charts.alphacast.io/api/datasets/", r,".csv", sep=""),
authenticate(user = api_key, password = ""))
content(r)
}
get_lucky_dataset(lucky_words, api_key)
get_lucky_dataset <- function(lucky_words, api_key) {
r <- httr::GET("https://charts.alphacast.io/api/datasets",
authenticate(user = api_key, password = ""))
r <- unique(dplyr::bind_rows(content(r))[ ,-5])
if (length(lucky_words)==2){ r <- r[grep(paste(".*(",lucky_words[1],".*",lucky_words[2],"|",lucky_words[2],".*",lucky_words[1], ").*", sep = ""), r$name), ]
} else {
r <- r[grepl(lucky_words[1], r$name), ]
}
r <- r[round(runif(1, min=1, max=nrow(r))),1]
r <- httr::GET(paste("https://charts.alphacast.io/api/datasets/", r,".csv", sep=""),
authenticate(user = api_key, password = ""))
content(r)
}
get_lucky_dataset(lucky_words, api_key)
dsts[grep(paste(".*(",lucky_words[1],".*",lucky_words[2],"|",lucky_words[2],".*",lucky_words[1], ").*", sep = ""), dsts$name), ]
dsts[grepl("(?=.*dog)(?=.*brown)", dsts$name, perl = TRUE), ]
dsts[grepl("(?=.*dog)(?=.*brown)", dsts$name, perl = TRUE), ]
dsts[grepl("(?=.*mobility)(?=.*mexico)", dsts$name, perl = TRUE), ]
dplyr::mutate(dsts, test = stringr::str_count(dsts$name,'mobility|mexico'))
dplyr::mutate(dsts, test = stringr::str_count(dsts$name,paste(lucky_words, collapse="|"))
dplyr::mutate(dsts, test = stringr::str_count(dsts$name,paste(lucky_words, collapse="|")))
dplyr::mutate(dsts, test = stringr::str_count(dsts$name,paste(lucky_words, collapse="|")))
dsts[which(dsts$count==length(lucky_words)), ]
dsts <- dplyr::mutate(dsts, count = stringr::str_count(dsts$name,paste(lucky_words, collapse="|")))
dsts[which(dsts$count==length(lucky_words)), ]
dsts[which(dsts$count==length(lucky_words)),]
dsts <- dplyr::mutate(dsts, count = stringr::str_count(dsts$name,paste(lucky_words, collapse="|")))
View(dsts)
dsts <- dplyr::mutate(dsts, count = stringr::str_count(dsts$name, paste(lucky_words, collapse="||")))
dsts[which(dsts$count==length(lucky_words)),-5]
View(dsts)
paste(lucky_words, collapse="|")
dplyr::filter(dsts, purrr::map_int(strsplit(as.character(dsts$name),'[[:punct:] ]'),
~sum(unique(.) %in% lucky_words)) == length(lucky_words))
strsplit(as.character(dsts$name),'[[:punct:] ]')
dplyr::filter(dsts, purrr::map_int(strsplit(as.character(dsts$name),'[[:punct:]]'),
~sum(unique(.) %in% lucky_words)) == length(lucky_words))
dplyr::filter(dsts, purrr::map_int(strsplit(as.character(dsts$name),'[[:punct:] ]'),
~sum(unique(.) %in% lucky_words)) == length(lucky_words))
length(lucky_words)
~sum(unique(.) %in% lucky_words
purrr::map_int(strsplit(as.character(dsts$name),'[[:punct:]]'),
~sum(unique(.) %in% lucky_words))
purrr::map_int(strsplit(as.character(dsts$name),'[[:punct:]]'),
~sum(unique(.) %in% lucky_words)
purrr::map_int(strsplit(as.character(dsts$name),'[[:punct:]]'),
~sum(unique(.) %in% lucky_words)) == length(lucky_words)
purrr::map_int(strsplit(as.character(dsts$name),'[[:punct:]]'),
~sum(unique(.) %in% lucky_words)) == length(lucky_words)
View(public_opinion)
View(dsts)
dplyr::filter(dsts, purrr::map_int(tolower(strsplit(as.character(dsts$name),'[[:punct:]]')),
~sum(unique(.) %in% tolower(lucky_words))) == length(lucky_words))
tolower(lucky_words)
purrr::map_int(tolower(strsplit(as.character(dsts$name),'[[:punct:]]')),
~sum(unique(.) %in% tolower(lucky_words))) == length(lucky_words)
tolower(strsplit(as.character(dsts$name),'[[:punct:]]'))
dplyr::filter(dsts, purrr::map_int(tolower(strsplit(as.character(dsts$name),'[[:punct:] ]')),
~sum(unique(.) %in% tolower(lucky_words))) == length(lucky_words))
tolower(strsplit(as.character(dsts$name),'[[:punct:] ]'))
dplyr::filter(dsts, purrr::map_int(strsplit(as.character(tolower(dsts$name)),'[[:punct:] ]'),
~sum(unique(.) %in% tolower(lucky_words))) == length(lucky_words))
get_lucky_dataset <- function(lucky_words, api_key) {
r <- httr::GET("https://charts.alphacast.io/api/datasets",
authenticate(user = api_key, password = ""))
r <- unique(dplyr::bind_rows(content(r))[ ,-5])
r <- dplyr::filter(dsts, purrr::map_int(strsplit(as.character(tolower(dsts$name)),'[[:punct:] ]'),
~sum(unique(.) %in% tolower(lucky_words))) == length(lucky_words))
r <- r[round(runif(1, min=1, max=nrow(r))),1]
r <- httr::GET(paste("https://charts.alphacast.io/api/datasets/", r,".csv", sep=""),
authenticate(user = api_key, password = ""))
content(r)
}
get_lucky_dataset(lucky_words, api_key)
lucky_words <- c("mobility", "argentina", "apple")
get_lucky_dataset(lucky_words, api_key)
get_lucky_dataset <- function(lucky_words, api_key) {
r <- httr::GET("https://charts.alphacast.io/api/datasets",
authenticate(user = api_key, password = ""))
r <- unique(dplyr::bind_rows(content(r))[ ,-5])
r <- dplyr::filter(r, purrr::map_int(strsplit(as.character(tolower(r$name)),'[[:punct:] ]'),
~sum(unique(.) %in% tolower(lucky_words))) == length(lucky_words))
r <- r[round(runif(1, min=1, max=nrow(r))),1]
r <- httr::GET(paste("https://charts.alphacast.io/api/datasets/", r,".csv", sep=""),
authenticate(user = api_key, password = ""))
content(r)
}
get_lucky_dataset(lucky_words, api_key)
r <- httr::GET("https://charts.alphacast.io/api/datasets",
authenticate(user = api_key, password = ""))
r <- unique(dplyr::bind_rows(content(r))[ ,-5])
r <- dplyr::filter(r, purrr::map_int(strsplit(as.character(tolower(r$name)),'[[:punct:] ]'),
~sum(unique(.) %in% tolower(lucky_words))) == length(lucky_words))
lucky_words <- c("mobility", "argentina")
get_lucky_dataset(lucky_words, api_key)
lucky_words <- c("mobility", "apple")
get_lucky_dataset(lucky_words, api_key)
View(dsts)
get_dataframe <- function(dataset_id, api_key) {
if (is.numeric(dataset_id)){
r <- httr::GET(paste("https://charts.alphacast.io/api/datasets/", dataset_id,".csv", sep=""),
authenticate(user = api_key, password = ""))
content(r)
}
else {
return("Error: dataset_id must be numeric.")
}
}
get_dataframe(6263, api_key)
df <- get_dataframe(6263, api_key)
View(df)
devtools::install_github("jfulponi/TransporteAR")
devtools::install_github("jfulponi/TransporteAR", force = TRUE)
library(transporteAR)
transporteAR::getPax()
plotsubsidiosycomp(precios_corrientes=FALSE)
transporteAR::plotsubsidiosycomp(precios_corrientes=FALSE)
library(dplyr)
library(ggplot2)
plotsubsidiosycomp(precios_corrientes=FALSE)
transporteAR::plotsubsidiosycomp(precios_corrientes=FALSE)
View(df)
reshape2::melt(df, id.vars=c("Entity", "Year"))
df <- reshape2::melt(df, id.vars=c("Entity", "Year"))
df <- get_dataframe(6263, api_key)
get_dataframe <- function(dataset_id, api_key) {
if (is.numeric(dataset_id)){
r <- httr::GET(paste("https://charts.alphacast.io/api/datasets/", dataset_id,".csv", sep=""),
authenticate(user = api_key, password = ""))
content(r)
}
else {
return("Error: dataset_id must be numeric.")
}
}
df <- get_dataframe(6263, api_key)
library(httpuv)
library(httpr)
get_dataframe <- function(dataset_id, api_key) {
if (is.numeric(dataset_id)){
r <- httr::GET(paste("https://charts.alphacast.io/api/datasets/", dataset_id,".csv", sep=""),
httr::authenticate(user = api_key, password = ""))
content(r)
}
else {
return("Error: dataset_id must be numeric.")
}
}
df <- get_dataframe(6263, api_key)
get_dataframe <- function(dataset_id, api_key) {
if (is.numeric(dataset_id)){
r <- httr::GET(paste("https://charts.alphacast.io/api/datasets/", dataset_id,".csv", sep=""),
httr::authenticate(user = api_key, password = ""))
httr::content(r)
}
else {
return("Error: dataset_id must be numeric.")
}
}
df <- get_dataframe(6263, api_key)
View(df)
