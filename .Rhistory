r <- r[which(lucky_words %in% r$name), ]
r <- r[round(runif(1, min=1, max=nrow(r))),1]
r
# r <- httr::GET(paste("https://charts.alphacast.io/api/datasets/", r,".csv", sep=""),
#               authenticate(user = api_key, password = ""))
#content(r)
}
get_lucky_dataset(lucky_words, api_key)
get_lucky_dataset <- function(lucky_words, api_key) {
r <- httr::GET("https://charts.alphacast.io/api/datasets",
authenticate(user = api_key, password = ""))
r <- unique(dplyr::bind_rows(content(r))[ ,-5])
#r <- r[which(r$name %in% lucky_words), ]
r <- r[grep(paste(lucky_words, collapse="|"), r$name), ]
r <- r[round(runif(1, min=1, max=nrow(r))),1]
r
r <- httr::GET(paste("https://charts.alphacast.io/api/datasets/", r,".csv", sep=""),
authenticate(user = api_key, password = ""))
content(r)
}
get_lucky_dataset(lucky_words, api_key)
get_lucky_dataset <- function(lucky_words, api_key) {
r <- httr::GET("https://charts.alphacast.io/api/datasets",
authenticate(user = api_key, password = ""))
r <- unique(dplyr::bind_rows(content(r))[ ,-5])
#r <- r[which(r$name %in% lucky_words), ]
r <- r[grep(paste(lucky_words, collapse="|"), r$name), ]
#r <- r[round(runif(1, min=1, max=nrow(r))),1]
r
# r <- httr::GET(paste("https://charts.alphacast.io/api/datasets/", r,".csv", sep=""),
authenticate(user = api_key, password = ""))
#content(r)
}
get_lucky_dataset <- function(lucky_words, api_key) {
r <- httr::GET("https://charts.alphacast.io/api/datasets",
authenticate(user = api_key, password = ""))
r <- unique(dplyr::bind_rows(content(r))[ ,-5])
#r <- r[which(r$name %in% lucky_words), ]
r <- r[grep(paste(lucky_words, collapse="|"), r$name), ]
#r <- r[round(runif(1, min=1, max=nrow(r))),1]
r
# r <- httr::GET(paste("https://charts.alphacast.io/api/datasets/", r,".csv", sep=""),
#               authenticate(user = api_key, password = ""))
#content(r)
}
get_lucky_dataset(lucky_words, api_key)
dsts[grep(paste(lucky_words, collapse="|"), dsts$name), ]
dsts[grep(paste(lucky_words), dsts$name), ]
dsts[grepl(paste(lucky_words, collapse="|"), dsts$name), ]
dsts[grepl("inflation", dsts$name), ]
View(dsts)
dsts[grepl("fiscal", dsts$name), ]
dsts[grepl("Fiscal", dsts$name), ]
dsts[grepl("Fiscal", dsts$name, ignore.case=TRUE), ]
dsts[grepl("fiscal", dsts$name, ignore.case=TRUE), ]
lucky_words <- c("Prices")
get_lucky_dataset <- function(lucky_words, api_key) {
r <- httr::GET("https://charts.alphacast.io/api/datasets",
authenticate(user = api_key, password = ""))
r <- unique(dplyr::bind_rows(content(r))[ ,-5])
#r <- r[which(r$name %in% lucky_words), ]
r <- r[grepl(paste(lucky_words, collapse="|", ignore.case=TRUE), r$name), ]
r <- r[round(runif(1, min=1, max=nrow(r))),1]
r
# r <- httr::GET(paste("https://charts.alphacast.io/api/datasets/", r,".csv", sep=""),
#               authenticate(user = api_key, password = ""))
#content(r)
}
get_lucky_dataset(lucky_words, api_key)
View(dsts)
lucky_words <- c("mobility", "mexico")
get_lucky_dataset(lucky_words, api_key)
get_lucky_dataset <- function(lucky_words, api_key) {
r <- httr::GET("https://charts.alphacast.io/api/datasets",
authenticate(user = api_key, password = ""))
r <- unique(dplyr::bind_rows(content(r))[ ,-5])
#r <- r[which(r$name %in% lucky_words), ]
r <- r[grepl(paste(lucky_words, collapse="||", ignore.case=TRUE), r$name), ]
r <- r[round(runif(1, min=1, max=nrow(r))),1]
r
# r <- httr::GET(paste("https://charts.alphacast.io/api/datasets/", r,".csv", sep=""),
#               authenticate(user = api_key, password = ""))
#content(r)
}
get_lucky_dataset(lucky_words, api_key)
get_lucky_dataset <- function(lucky_words, api_key) {
r <- httr::GET("https://charts.alphacast.io/api/datasets",
authenticate(user = api_key, password = ""))
r <- unique(dplyr::bind_rows(content(r))[ ,-5])
#r <- r[which(r$name %in% lucky_words), ]
r <- r[grepl(paste(lucky_words, collapse="||", ignore.case=TRUE), r$name), ]
r <- r[round(runif(1, min=1, max=nrow(r))),1]
r <- httr::GET(paste("https://charts.alphacast.io/api/datasets/", r,".csv", sep=""),
authenticate(user = api_key, password = ""))
content(r)
}
get_lucky_dataset(lucky_words, api_key)
get_lucky_dataset <- function(lucky_words, api_key) {
r <- httr::GET("https://charts.alphacast.io/api/datasets",
authenticate(user = api_key, password = ""))
r <- unique(dplyr::bind_rows(content(r))[ ,-5])
r <- r[grepl(paste(lucky_words, collapse="&&", ignore.case=TRUE), r$name), ]
r <- r[round(runif(1, min=1, max=nrow(r))),1]
r <- httr::GET(paste("https://charts.alphacast.io/api/datasets/", r,".csv", sep=""),
authenticate(user = api_key, password = ""))
content(r)
}
get_lucky_dataset(lucky_words, api_key)
dsts <- dsts[grepl(paste(lucky_words, collapse="||", ignore.case=TRUE), dsts$name), ]
get_datasets <- function(api_key) {
r <- httr::GET("https://charts.alphacast.io/api/datasets",
authenticate(user = api_key, password = ""))
unique(dplyr::bind_rows(content(r))[ ,-5])
}
dsts <- get_datasets()
dsts <- get_datasets(api_key)
dsts[grepl(paste(lucky_words, collapse="||", ignore.case=TRUE), dsts$name), ]
dsts[grepl(paste(lucky_words, collapse="||", ignore.case=TRUE), dsts$name), ]
lucky_words <- c("mobility", "mexico")
dsts[grepl(paste(lucky_words, collapse="||", ignore.case=TRUE), dsts$name), ]
dsts[grepl(paste(lucky_words, collapse="&", ignore.case=TRUE), dsts$name), ]
dsts[grepl(paste(lucky_words, collapse="&&", ignore.case=TRUE), dsts$name), ]
dsts[grepl(paste(lucky_words, ignore.case=TRUE), dsts$name), ]
dsts[grepl(paste(lucky_words, collapse="||"), ignore.case=TRUE), dsts$name), ]
dsts[grepl(paste(lucky_words, collapse="||"), ignore.case=TRUE, dsts$name), ]
dsts[grepl(paste(lucky_words, collapse="|"), ignore.case=TRUE, dsts$name), ]
dsts[grepl(paste(lucky_words, collapse="&"), ignore.case=TRUE, dsts$name), ]
dsts[grepl(paste(lucky_words, collapse="|"), ignore.case=TRUE, dsts$name), ]
dsts[stringr::str_detect(dsts$name, lucky_words), ]
dsts[stringr::str_detect(dsts$name, lucky_words, negate = TRUE), ]
length(lucky_words)
get_lucky_dataset <- function(lucky_words, api_key) {
r <- httr::GET("https://charts.alphacast.io/api/datasets",
authenticate(user = api_key, password = ""))
r <- unique(dplyr::bind_rows(content(r))[ ,-5])
if (length(lucky_words)==2){ r <- r[grepl(paste("^(?=.*\\b", lucky_words[1], "\\b)(?=.*\\b", lucky_words[2], "\\b)", sep = ""), r$name), ]
} else {
r <- r[grepl(lucky_words[1], r$name), ]
}
r <- r[round(runif(1, min=1, max=nrow(r))),1]
r <- httr::GET(paste("https://charts.alphacast.io/api/datasets/", r,".csv", sep=""),
authenticate(user = api_key, password = ""))
content(r)
}
get_lucky_dataset(lucky_words, api_key)
get_lucky_dataset <- function(lucky_words, api_key) {
r <- httr::GET("https://charts.alphacast.io/api/datasets",
authenticate(user = api_key, password = ""))
r <- unique(dplyr::bind_rows(content(r))[ ,-5])
if (length(lucky_words)==2){ r <- r[grepl(paste(".*(",lucky_words[1],".*",lucky_words[2],"|",lucky_words[2],".*",lucky_words[1], ").*", sep = ""), r$name), ]
} else {
r <- r[grepl(lucky_words[1], r$name), ]
}
r <- r[round(runif(1, min=1, max=nrow(r))),1]
r <- httr::GET(paste("https://charts.alphacast.io/api/datasets/", r,".csv", sep=""),
authenticate(user = api_key, password = ""))
content(r)
}
get_lucky_dataset(lucky_words, api_key)
get_lucky_dataset <- function(lucky_words, api_key) {
r <- httr::GET("https://charts.alphacast.io/api/datasets",
authenticate(user = api_key, password = ""))
r <- unique(dplyr::bind_rows(content(r))[ ,-5])
if (length(lucky_words)==2){ r <- r[grep(paste(".*(",lucky_words[1],".*",lucky_words[2],"|",lucky_words[2],".*",lucky_words[1], ").*", sep = ""), r$name), ]
} else {
r <- r[grepl(lucky_words[1], r$name), ]
}
r <- r[round(runif(1, min=1, max=nrow(r))),1]
r <- httr::GET(paste("https://charts.alphacast.io/api/datasets/", r,".csv", sep=""),
authenticate(user = api_key, password = ""))
content(r)
}
get_lucky_dataset(lucky_words, api_key)
dsts[grep(paste(".*(",lucky_words[1],".*",lucky_words[2],"|",lucky_words[2],".*",lucky_words[1], ").*", sep = ""), dsts$name), ]
dsts[grepl("(?=.*dog)(?=.*brown)", dsts$name, perl = TRUE), ]
dsts[grepl("(?=.*dog)(?=.*brown)", dsts$name, perl = TRUE), ]
dsts[grepl("(?=.*mobility)(?=.*mexico)", dsts$name, perl = TRUE), ]
dplyr::mutate(dsts, test = stringr::str_count(dsts$name,'mobility|mexico'))
dplyr::mutate(dsts, test = stringr::str_count(dsts$name,paste(lucky_words, collapse="|"))
dplyr::mutate(dsts, test = stringr::str_count(dsts$name,paste(lucky_words, collapse="|")))
dplyr::mutate(dsts, test = stringr::str_count(dsts$name,paste(lucky_words, collapse="|")))
dsts[which(dsts$count==length(lucky_words)), ]
dsts <- dplyr::mutate(dsts, count = stringr::str_count(dsts$name,paste(lucky_words, collapse="|")))
dsts[which(dsts$count==length(lucky_words)), ]
dsts[which(dsts$count==length(lucky_words)),]
dsts <- dplyr::mutate(dsts, count = stringr::str_count(dsts$name,paste(lucky_words, collapse="|")))
View(dsts)
dsts <- dplyr::mutate(dsts, count = stringr::str_count(dsts$name, paste(lucky_words, collapse="||")))
dsts[which(dsts$count==length(lucky_words)),-5]
View(dsts)
paste(lucky_words, collapse="|")
dplyr::filter(dsts, purrr::map_int(strsplit(as.character(dsts$name),'[[:punct:] ]'),
~sum(unique(.) %in% lucky_words)) == length(lucky_words))
strsplit(as.character(dsts$name),'[[:punct:] ]')
dplyr::filter(dsts, purrr::map_int(strsplit(as.character(dsts$name),'[[:punct:]]'),
~sum(unique(.) %in% lucky_words)) == length(lucky_words))
dplyr::filter(dsts, purrr::map_int(strsplit(as.character(dsts$name),'[[:punct:] ]'),
~sum(unique(.) %in% lucky_words)) == length(lucky_words))
length(lucky_words)
~sum(unique(.) %in% lucky_words
purrr::map_int(strsplit(as.character(dsts$name),'[[:punct:]]'),
~sum(unique(.) %in% lucky_words))
purrr::map_int(strsplit(as.character(dsts$name),'[[:punct:]]'),
~sum(unique(.) %in% lucky_words)
purrr::map_int(strsplit(as.character(dsts$name),'[[:punct:]]'),
~sum(unique(.) %in% lucky_words)) == length(lucky_words)
purrr::map_int(strsplit(as.character(dsts$name),'[[:punct:]]'),
~sum(unique(.) %in% lucky_words)) == length(lucky_words)
View(public_opinion)
View(dsts)
dplyr::filter(dsts, purrr::map_int(tolower(strsplit(as.character(dsts$name),'[[:punct:]]')),
~sum(unique(.) %in% tolower(lucky_words))) == length(lucky_words))
tolower(lucky_words)
purrr::map_int(tolower(strsplit(as.character(dsts$name),'[[:punct:]]')),
~sum(unique(.) %in% tolower(lucky_words))) == length(lucky_words)
tolower(strsplit(as.character(dsts$name),'[[:punct:]]'))
dplyr::filter(dsts, purrr::map_int(tolower(strsplit(as.character(dsts$name),'[[:punct:] ]')),
~sum(unique(.) %in% tolower(lucky_words))) == length(lucky_words))
tolower(strsplit(as.character(dsts$name),'[[:punct:] ]'))
dplyr::filter(dsts, purrr::map_int(strsplit(as.character(tolower(dsts$name)),'[[:punct:] ]'),
~sum(unique(.) %in% tolower(lucky_words))) == length(lucky_words))
get_lucky_dataset <- function(lucky_words, api_key) {
r <- httr::GET("https://charts.alphacast.io/api/datasets",
authenticate(user = api_key, password = ""))
r <- unique(dplyr::bind_rows(content(r))[ ,-5])
r <- dplyr::filter(dsts, purrr::map_int(strsplit(as.character(tolower(dsts$name)),'[[:punct:] ]'),
~sum(unique(.) %in% tolower(lucky_words))) == length(lucky_words))
r <- r[round(runif(1, min=1, max=nrow(r))),1]
r <- httr::GET(paste("https://charts.alphacast.io/api/datasets/", r,".csv", sep=""),
authenticate(user = api_key, password = ""))
content(r)
}
get_lucky_dataset(lucky_words, api_key)
lucky_words <- c("mobility", "argentina", "apple")
get_lucky_dataset(lucky_words, api_key)
get_lucky_dataset <- function(lucky_words, api_key) {
r <- httr::GET("https://charts.alphacast.io/api/datasets",
authenticate(user = api_key, password = ""))
r <- unique(dplyr::bind_rows(content(r))[ ,-5])
r <- dplyr::filter(r, purrr::map_int(strsplit(as.character(tolower(r$name)),'[[:punct:] ]'),
~sum(unique(.) %in% tolower(lucky_words))) == length(lucky_words))
r <- r[round(runif(1, min=1, max=nrow(r))),1]
r <- httr::GET(paste("https://charts.alphacast.io/api/datasets/", r,".csv", sep=""),
authenticate(user = api_key, password = ""))
content(r)
}
get_lucky_dataset(lucky_words, api_key)
r <- httr::GET("https://charts.alphacast.io/api/datasets",
authenticate(user = api_key, password = ""))
r <- unique(dplyr::bind_rows(content(r))[ ,-5])
r <- dplyr::filter(r, purrr::map_int(strsplit(as.character(tolower(r$name)),'[[:punct:] ]'),
~sum(unique(.) %in% tolower(lucky_words))) == length(lucky_words))
lucky_words <- c("mobility", "argentina")
get_lucky_dataset(lucky_words, api_key)
lucky_words <- c("mobility", "apple")
get_lucky_dataset(lucky_words, api_key)
View(dsts)
get_dataframe <- function(dataset_id, api_key) {
if (is.numeric(dataset_id)){
r <- httr::GET(paste("https://charts.alphacast.io/api/datasets/", dataset_id,".csv", sep=""),
authenticate(user = api_key, password = ""))
content(r)
}
else {
return("Error: dataset_id must be numeric.")
}
}
get_dataframe(6263, api_key)
df <- get_dataframe(6263, api_key)
View(df)
devtools::install_github("jfulponi/TransporteAR")
devtools::install_github("jfulponi/TransporteAR", force = TRUE)
library(transporteAR)
transporteAR::getPax()
plotsubsidiosycomp(precios_corrientes=FALSE)
transporteAR::plotsubsidiosycomp(precios_corrientes=FALSE)
library(dplyr)
library(ggplot2)
plotsubsidiosycomp(precios_corrientes=FALSE)
transporteAR::plotsubsidiosycomp(precios_corrientes=FALSE)
View(df)
reshape2::melt(df, id.vars=c("Entity", "Year"))
df <- reshape2::melt(df, id.vars=c("Entity", "Year"))
df <- get_dataframe(6263, api_key)
get_dataframe <- function(dataset_id, api_key) {
if (is.numeric(dataset_id)){
r <- httr::GET(paste("https://charts.alphacast.io/api/datasets/", dataset_id,".csv", sep=""),
authenticate(user = api_key, password = ""))
content(r)
}
else {
return("Error: dataset_id must be numeric.")
}
}
df <- get_dataframe(6263, api_key)
library(httpuv)
library(httpr)
get_dataframe <- function(dataset_id, api_key) {
if (is.numeric(dataset_id)){
r <- httr::GET(paste("https://charts.alphacast.io/api/datasets/", dataset_id,".csv", sep=""),
httr::authenticate(user = api_key, password = ""))
content(r)
}
else {
return("Error: dataset_id must be numeric.")
}
}
df <- get_dataframe(6263, api_key)
get_dataframe <- function(dataset_id, api_key) {
if (is.numeric(dataset_id)){
r <- httr::GET(paste("https://charts.alphacast.io/api/datasets/", dataset_id,".csv", sep=""),
httr::authenticate(user = api_key, password = ""))
httr::content(r)
}
else {
return("Error: dataset_id must be numeric.")
}
}
df <- get_dataframe(6263, api_key)
View(df)
get_dataframe <- function(dataset_id, api_key, long = FALSE) {
if (is.numeric(dataset_id)){
r <- httr::GET(paste("https://charts.alphacast.io/api/datasets/", dataset_id,".csv", sep=""),
httr::authenticate(user = api_key, password = ""))
httr::content(r)
if (isTRUE(long)) {
r <- reshape2::melt(r, id.vars = c("Entity", "Year"))
} else {
}
}
else {
return("Error: dataset_id must be numeric.")
}
}
library(dplyr)
library(httr)
library(ggplot2)
get_dataframe(6263, api_key, long = TRUE)
get_dataframe <- function(dataset_id, api_key, long = FALSE) {
if (is.numeric(dataset_id)){
r <- httr::GET(paste("https://charts.alphacast.io/api/datasets/", dataset_id,".csv", sep=""),
httr::authenticate(user = api_key, password = ""))
r <- content(r)
if (isTRUE(long)) {
r <- reshape2::melt(r, id.vars = c("Entity", "Year"))
r
} else {
r
}
}
else {
return("Error: dataset_id must be numeric.")
}
}
get_dataframe(6263, api_key, long = TRUE)
get_dataframe(6263, api_key)
get_lucky_dataset <- function(lucky_words, api_key, long = FALSE) {
r <- httr::GET("https://charts.alphacast.io/api/datasets",
authenticate(user = api_key, password = ""))
r <- unique(dplyr::bind_rows(content(r))[ ,-5])
r <- dplyr::filter(r, purrr::map_int(strsplit(as.character(tolower(r$name)),'[[:punct:] ]'),
~sum(unique(.) %in% tolower(lucky_words))) == length(lucky_words))
r <- r[round(runif(1, min=1, max=nrow(r))),1]
r <- httr::GET(paste("https://charts.alphacast.io/api/datasets/", r,".csv", sep=""),
authenticate(user = api_key, password = ""))
r <- content(r)
if (isTRUE(long)) {
r <- reshape2::melt(r, id.vars = c("Entity", "Year"))
r
} else {
r
}
}
}
get_lucky_dataset <- function(lucky_words, api_key, long = FALSE) {
r <- httr::GET("https://charts.alphacast.io/api/datasets",
authenticate(user = api_key, password = ""))
r <- unique(dplyr::bind_rows(content(r))[ ,-5])
r <- dplyr::filter(r, purrr::map_int(strsplit(as.character(tolower(r$name)),'[[:punct:] ]'),
~sum(unique(.) %in% tolower(lucky_words))) == length(lucky_words))
r <- r[round(runif(1, min=1, max=nrow(r))),1]
r <- httr::GET(paste("https://charts.alphacast.io/api/datasets/", r,".csv", sep=""),
authenticate(user = api_key, password = ""))
r <- content(r)
if (isTRUE(long)) {
r <- reshape2::melt(r, id.vars = c("Entity", "Year"))
r
} else {
r
}
}
get_lucky_dataset(lucky_words, api_key, long = TRUE)
get_repos <- function(api_key) {
r <- httr::GET("https://api.alphacast.io/repositories",
authenticate(user = api_key, password = ""))
unique(dplyr::bind_rows(content(r)))
}
get_repos(api_key)
api_key <- "ak_JGzP3xTSrj9e29e5bVCq"
get_repos(api_key)
get_repos_datasets <- function(repo_id, api_key) {
if (is.numeric(repo_id)){
r <- httr::GET("https://api.alphacast.io/datasets", query = list(repo_id = repo_id)
httr::authenticate(user = api_key, password = ""))
content(r)
}
else {
return("Error: repo_id must be numeric.")
}
}
get_repos_datasets <- function(repo_id, api_key) {
if (is.numeric(repo_id)){
r <- httr::GET("https://api.alphacast.io/datasets", query = list(repo_id = repo_id)
httr::authenticate(user = api_key, password = ""))
content(r)
}
else {
return("Error: repo_id must be numeric.")
}
}
get_repos_datasets <- function(repo_id, api_key) {
if (is.numeric(repo_id)){
r <- httr::GET("https://api.alphacast.io/datasets", query = list(repo_id = repo_id),
httr::authenticate(user = api_key, password = ""))
httr::content(r)
}
else {
return("Error: repo_id must be numeric.")
}
}
get_repos_datasets(20, api_key)
get_repos_datasets <- function(repo_id, api_key) {
if (is.numeric(repo_id)){
r <- httr::GET("https://api.alphacast.io/datasets", query = list(repo_id = repo_id),
httr::authenticate(user = api_key, password = ""))
dplyr::bind_rows(content(r))
}
else {
return("Error: repo_id must be numeric.")
}
}
get_repos_datasets(20, api_key)
get_repos_datasets <- function(repo_id, api_key) {
if (is.numeric(repo_id)){
r <- httr::GET("https://api.alphacast.io/datasets", query = list(repo_id = repo_id),
httr::authenticate(user = api_key, password = ""))
r <- dplyr::bind_rows(content(r))
r[which(r$repositoryId==repo_id), ]
}
else {
return("Error: repo_id must be numeric.")
}
}
get_repos_datasets(20, api_key)
View(r)
get_repos(api_key)
roxygen2::roxygenise()
`rm(list = c("get_dataframe", "get_datasets", "get_lucky_dataset", "get_repos", "get_repos_datasets"))`
roxygen2::roxygenise()
get_lucky_dataset(c("inflation", "argentina"), api_key, long=TRUE)
get_lucky_dataset(c("inflation", "argentina"), api_key, long=TRUE)
devtools::install_github("jfulponi/alphacast")
devtools::install_github("jfulponi/q    lphacast")
devtools::install_github("jfulponi/Alphacast")
devtools::install_github("jfulponi/Alphacast")
library(Alphacast)
library(Alphacast)
api_key <- "ak_JGzP3xTSrj9e29e5bVCq"
get_lucky_dataset(c("brazil", "gdp"), api_key)
get_lucky_dataset(c("brazil", "prices", "index"), api_key)
get_lucky_dataset(c("brazil", "price", "index"), api_key)
get_lucky_dataset(c("brazil", "prices"), api_key)
get_lucky_dataset(c("prices"), api_key)
library(Alphacast)
library(Alphacast)
api_key <- "ak_JGzP3xTSrj9e29e5bVCq"
dt <- get_datasets(api_key)
library(httr)
dt <- get_datasets(api_key)
View(dt)
get_repos_datasets(20. api_key)
get_repos_datasets(20, api_key)
api_key <- "ak_JGzP3xTSrj9e29e5bVCq"
get_repos_datasets(20, api_key)
api_key <- "ak_JGzP3xTSrj9e29e5bVCq"
library(Alphacast)
library(Alphacast)
datasets <- get_datasets(api_key)
View(datasets)
mobility <- get_dataframe(5403, api_key)
View(mobility)
mobility <- get_dataframe(5403, api_key, long = TRUE)
View(mobility)
df <- get_lucky_dataset(c("Mobility", "Chile"), api_key, long = TRUE)
View(df)
df <- get_lucky_dataset(c("opinion", "uruguay"), api_key, long = TRUE)
View(df)
View(df)
df <- get_lucky_dataset(c("CPI"), api_key, long = TRUE)
View(df)
View(datasets)
df <- get_lucky_dataset(c("inflation", "poland"), api_key, long = TRUE)
View(df)
lucky_words <- c("inflation", "argentina", "brazil", "gdp")
for (i in 1:4) {
df <- get_lucky_dataset(lucky_words[i], api_key, long = TRUE)
}
datasets <- get_datasets(api_key)
api_key <- "ak_JGzP3xTSrj9e29e5bVCq"
library(Alphacast)
datasets <- get_datasets(api_key)
mobility <- get_dataframe(5403, api_key, long = TRUE)
